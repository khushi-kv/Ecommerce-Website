{"ast":null,"code":"// import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n// import { BASE_URL } from \"../utils/apiURL\";\n// import { STATUS } from \"../utils/status\";\n// const initialState = {\n//   products: [],\n//   productsStatus: STATUS.IDLE,\n//   productSingle: [],\n//   productSingleStatus: STATUS.IDLE,\n// };\n// const productSlice = createSlice({\n//   name: \"product\",\n//   initialState,\n//   reducers: {},\n//   extraReducers: (builder) => {\n//     builder\n//       .addCase(fetchAsyncProducts.pending, (state, action) => {\n//         state.productsStatus = STATUS.LOADING;\n//       })\n//       .addCase(fetchAsyncProducts.fulfilled, (state, action) => {\n//         state.products = action.payload;\n//         state.productsStatus = STATUS.SUCCEEDED;\n//       })\n//       .addCase(fetchAsyncProducts.rejected, (state, action) => {\n//         state.productsStatus = STATUS.FAILED;\n//       })\n//       .addCase(fetchAsyncSingleProduct.pending, (state, action) => {\n//         state.productSingleStatus = STATUS.LOADING;\n//       })\n//       .addCase(fetchAsyncSingleProduct.fulfilled, (state, action) => {\n//         state.productSingle = action.payload;\n//         state.productSingleStatus = STATUS.SUCCEEDED;\n//       })\n//       .addCase(fetchAsyncSingleProduct.rejected, (state, action) => {\n//         state.productSingleStatus = STATUS.FAILED;\n//       });\n//   },\n// });\n// // for getting the products list with limited numbers\n// export const fetchAsyncProducts = createAsyncThunk(\n//   \"products/fetch\",\n//   async (limit) => {\n//     const response = await fetch(`${BASE_URL}products?limit=${limit}`);\n//     const data = await response.json();\n//     return data.products;\n//   }\n// );\n// //for single product\n// export const fetchAsyncSingleProduct = createAsyncThunk(\n//   \"products-single/fetch\",\n//   async (id) => {\n//     const response = await fetch(`${BASE_URL}products/${id}`);\n//     const data = response.json();\n//     return data;\n//   }\n// );\n// export const getAllProducts = (state) => state.product.products;\n// export const getAllProductsStatus = (state) => state.product.productsStatus;\n// export const getProductSingle = (state) => state.product.productSingle;\n// export const getProductSingleStatus = (state) =>\n//   state.product.productSingleStatus;\n\n// export default productSlice.reducer;","map":{"version":3,"names":[],"sources":["/Users/khushiverma/Desktop/Ecommerce-Website/shoppingcart/src/store/ProductSlice.js"],"sourcesContent":["// import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n// import { BASE_URL } from \"../utils/apiURL\";\n// import { STATUS } from \"../utils/status\";\n// const initialState = {\n//   products: [],\n//   productsStatus: STATUS.IDLE,\n//   productSingle: [],\n//   productSingleStatus: STATUS.IDLE,\n// };\n// const productSlice = createSlice({\n//   name: \"product\",\n//   initialState,\n//   reducers: {},\n//   extraReducers: (builder) => {\n//     builder\n//       .addCase(fetchAsyncProducts.pending, (state, action) => {\n//         state.productsStatus = STATUS.LOADING;\n//       })\n//       .addCase(fetchAsyncProducts.fulfilled, (state, action) => {\n//         state.products = action.payload;\n//         state.productsStatus = STATUS.SUCCEEDED;\n//       })\n//       .addCase(fetchAsyncProducts.rejected, (state, action) => {\n//         state.productsStatus = STATUS.FAILED;\n//       })\n//       .addCase(fetchAsyncSingleProduct.pending, (state, action) => {\n//         state.productSingleStatus = STATUS.LOADING;\n//       })\n//       .addCase(fetchAsyncSingleProduct.fulfilled, (state, action) => {\n//         state.productSingle = action.payload;\n//         state.productSingleStatus = STATUS.SUCCEEDED;\n//       })\n//       .addCase(fetchAsyncSingleProduct.rejected, (state, action) => {\n//         state.productSingleStatus = STATUS.FAILED;\n//       });\n//   },\n// });\n// // for getting the products list with limited numbers\n// export const fetchAsyncProducts = createAsyncThunk(\n//   \"products/fetch\",\n//   async (limit) => {\n//     const response = await fetch(`${BASE_URL}products?limit=${limit}`);\n//     const data = await response.json();\n//     return data.products;\n//   }\n// );\n// //for single product\n// export const fetchAsyncSingleProduct = createAsyncThunk(\n//   \"products-single/fetch\",\n//   async (id) => {\n//     const response = await fetch(`${BASE_URL}products/${id}`);\n//     const data = response.json();\n//     return data;\n//   }\n// );\n// export const getAllProducts = (state) => state.product.products;\n// export const getAllProductsStatus = (state) => state.product.productsStatus;\n// export const getProductSingle = (state) => state.product.productSingle;\n// export const getProductSingleStatus = (state) =>\n//   state.product.productSingleStatus;\n\n// export default productSlice.reducer;\n\n\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}