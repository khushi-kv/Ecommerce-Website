{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  carts: [],\n  itemsCount: 0,\n  totalAmount: 0,\n  isCartMessageOn: false\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    addToCart: (state, action) => {\n      const isItemInCart = state.carts.find(item => item.id === action.payload.id);\n      if (isItemInCart) {\n        const tempCart = state.carts.map(item => {\n          if (item.id === action.payload.id) {\n            let tempQty = item.quantity + action.payload.quantity;\n            let tempTotalPrice = tempQty * item.price;\n            return {\n              ...item,\n              quantity: tempQty,\n              totalPrice: tempTotalPrice\n            };\n          } else {\n            return item;\n          }\n        });\n        state.carts = tempCart;\n        storeInLocalStorage(state.carts);\n      } else {\n        state.carts.push(action.payload);\n        storeInLocalStorage(state.carts);\n      }\n    }\n  }\n});\nexport const {\n  addToCart\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","carts","itemsCount","totalAmount","isCartMessageOn","cartSlice","name","reducers","addToCart","state","action","isItemInCart","find","item","id","payload","tempCart","map","tempQty","quantity","tempTotalPrice","price","totalPrice","storeInLocalStorage","push","actions","reducer"],"sources":["/Users/khushiverma/Desktop/Ecommerce-Website/shoppingcart/src/store/CartSlice.js"],"sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\n\n\nconst initialState = {\n    carts: [],\n    itemsCount: 0,\n    totalAmount: 0,\n    isCartMessageOn: false\n}\n\nconst cartSlice = createSlice({\n    name: 'cart',\n    initialState,\n    reducers: {\n        addToCart: (state, action) => {\n            const isItemInCart = state.carts.find(item => item.id === action.payload.id);\n\n            if(isItemInCart){\n                const tempCart = state.carts.map(item => {\n                    if(item.id === action.payload.id){\n                        let tempQty = item.quantity + action.payload.quantity;\n                        let tempTotalPrice = tempQty * item.price;\n\n                        return {\n                            ...item, quantity: tempQty, totalPrice: tempTotalPrice\n                        }\n                    } else {\n                        return item;\n                    }\n                });\n\n                state.carts = tempCart;\n                storeInLocalStorage(state.carts);\n            } else {\n                state.carts.push(action.payload);\n                storeInLocalStorage(state.carts);\n            }\n        },\n    }\n})\nexport const {addToCart}=cartSlice.actions;\nexport default cartSlice.reducer;"],"mappings":"AAAA,SAAQA,WAAW,QAAO,kBAAkB;AAG5C,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAE,EAAE;EACTC,UAAU,EAAE,CAAC;EACbC,WAAW,EAAE,CAAC;EACdC,eAAe,EAAE;AACrB,CAAC;AAED,MAAMC,SAAS,GAAGN,WAAW,CAAC;EAC1BO,IAAI,EAAE,MAAM;EACZN,YAAY;EACZO,QAAQ,EAAE;IACNC,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1B,MAAMC,YAAY,GAAGF,KAAK,CAACR,KAAK,CAACW,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAACD,EAAE,CAAC;MAE5E,IAAGH,YAAY,EAAC;QACZ,MAAMK,QAAQ,GAAGP,KAAK,CAACR,KAAK,CAACgB,GAAG,CAACJ,IAAI,IAAI;UACrC,IAAGA,IAAI,CAACC,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAACD,EAAE,EAAC;YAC7B,IAAII,OAAO,GAAGL,IAAI,CAACM,QAAQ,GAAGT,MAAM,CAACK,OAAO,CAACI,QAAQ;YACrD,IAAIC,cAAc,GAAGF,OAAO,GAAGL,IAAI,CAACQ,KAAK;YAEzC,OAAO;cACH,GAAGR,IAAI;cAAEM,QAAQ,EAAED,OAAO;cAAEI,UAAU,EAAEF;YAC5C,CAAC;UACL,CAAC,MAAM;YACH,OAAOP,IAAI;UACf;QACJ,CAAC,CAAC;QAEFJ,KAAK,CAACR,KAAK,GAAGe,QAAQ;QACtBO,mBAAmB,CAACd,KAAK,CAACR,KAAK,CAAC;MACpC,CAAC,MAAM;QACHQ,KAAK,CAACR,KAAK,CAACuB,IAAI,CAACd,MAAM,CAACK,OAAO,CAAC;QAChCQ,mBAAmB,CAACd,KAAK,CAACR,KAAK,CAAC;MACpC;IACJ;EACJ;AACJ,CAAC,CAAC;AACF,OAAO,MAAM;EAACO;AAAS,CAAC,GAACH,SAAS,CAACoB,OAAO;AAC1C,eAAepB,SAAS,CAACqB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}