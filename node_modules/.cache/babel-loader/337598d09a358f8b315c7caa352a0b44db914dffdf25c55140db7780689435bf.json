{"ast":null,"code":"import React from 'react';\nimport { createSlice } from '@reduxjs/toolkit';\n//for local storage of data getting data\nconst fetchFromLocalStorage = () => {\n  let cart = localStorage.getItem('cart');\n  if (cart) {\n    return JSON.parse(localStorage.getItem('cart'));\n  } else {\n    return [];\n  }\n};\n//store\nconst storeInLocalStorage = data => {\n  localStorage.setItem('cart', JSON.stringify(data));\n};\nconst initialState = {\n  carts: fetchFromLocalStorage(),\n  itemsCount: 0,\n  totalAmount: 0,\n  isCartMessageOn: false\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    addToCart: (state, action) => {\n      const isItemInCart = state.carts.find(item => item.id === action.payload.id);\n      if (isItemInCart) {\n        const tempCart = state.carts.map(item => {\n          if (item.id === action.payload.id) {\n            let tempQty = item.quantity + action.payload.quantity;\n            let tempTotalPrice = tempQty * item.price;\n            return {\n              ...item,\n              quantity: tempQty,\n              totalPrice: tempTotalPrice\n            };\n          } else {\n            return item;\n          }\n        });\n        state.carts = tempCart;\n      } else {\n        state.carts.push(action.payload);\n      }\n    }\n  }\n});\nexport const {\n  addToCart\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["React","createSlice","fetchFromLocalStorage","cart","localStorage","getItem","JSON","parse","storeInLocalStorage","data","setItem","stringify","initialState","carts","itemsCount","totalAmount","isCartMessageOn","cartSlice","name","reducers","addToCart","state","action","isItemInCart","find","item","id","payload","tempCart","map","tempQty","quantity","tempTotalPrice","price","totalPrice","push","actions","reducer"],"sources":["/Users/khushiverma/Desktop/Ecommerce-Website/shoppingcart/src/store/CartSlice.js"],"sourcesContent":["import React from 'react'\nimport { createSlice } from '@reduxjs/toolkit'\n//for local storage of data getting data\nconst fetchFromLocalStorage=()=>{\n let cart=localStorage.getItem('cart');\n if(cart){\n     return JSON.parse(localStorage.getItem('cart'));\n\n }\n else{\n     return [];\n }\n} \n//store\nconst storeInLocalStorage=(data)=>{\nlocalStorage.setItem('cart',JSON.stringify(data));\n} \nconst initialState={\ncarts:fetchFromLocalStorage(),\nitemsCount:0,\ntotalAmount:0,\nisCartMessageOn:false\n}\nconst cartSlice=createSlice({\n    name:'cart',\n    initialState,\n    reducers:{\n        addToCart:(state,action)=>{\n            const isItemInCart=state.carts.find(item=>\n                item.id===action.payload.id);\n            \n                if(isItemInCart){\n                    const tempCart=state.carts.map((item)=>{\n                        if(item.id===action.payload.id){\n                            let tempQty=item.quantity+action.payload.quantity;\n                            let tempTotalPrice=tempQty*item.price;\n\n                            return {\n                                ...item,quantity:tempQty,\n                                totalPrice:tempTotalPrice\n                            }\n\n                        }\n                        else{\n                            return item;\n                        }\n                    })\n                    state.carts=tempCart;\n                    \n                }\n                else{\n                    state.carts.push(action.payload);\n                }\n          \n        }\n    }\n})\nexport const {addToCart}=cartSlice.actions;\nexport default cartSlice.reducer;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C;AACA,MAAMC,qBAAqB,GAAC,MAAI;EAC/B,IAAIC,IAAI,GAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;EACrC,IAAGF,IAAI,EAAC;IACJ,OAAOG,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;EAEnD,CAAC,MACG;IACA,OAAO,EAAE;EACb;AACD,CAAC;AACD;AACA,MAAMG,mBAAmB,GAAEC,IAAI,IAAG;EAClCL,YAAY,CAACM,OAAO,CAAC,MAAM,EAACJ,IAAI,CAACK,SAAS,CAACF,IAAI,CAAC,CAAC;AACjD,CAAC;AACD,MAAMG,YAAY,GAAC;EACnBC,KAAK,EAACX,qBAAqB,EAAE;EAC7BY,UAAU,EAAC,CAAC;EACZC,WAAW,EAAC,CAAC;EACbC,eAAe,EAAC;AAChB,CAAC;AACD,MAAMC,SAAS,GAAChB,WAAW,CAAC;EACxBiB,IAAI,EAAC,MAAM;EACXN,YAAY;EACZO,QAAQ,EAAC;IACLC,SAAS,EAAC,CAACC,KAAK,EAACC,MAAM,KAAG;MACtB,MAAMC,YAAY,GAACF,KAAK,CAACR,KAAK,CAACW,IAAI,CAACC,IAAI,IACpCA,IAAI,CAACC,EAAE,KAAGJ,MAAM,CAACK,OAAO,CAACD,EAAE,CAAC;MAE5B,IAAGH,YAAY,EAAC;QACZ,MAAMK,QAAQ,GAACP,KAAK,CAACR,KAAK,CAACgB,GAAG,CAAEJ,IAAI,IAAG;UACnC,IAAGA,IAAI,CAACC,EAAE,KAAGJ,MAAM,CAACK,OAAO,CAACD,EAAE,EAAC;YAC3B,IAAII,OAAO,GAACL,IAAI,CAACM,QAAQ,GAACT,MAAM,CAACK,OAAO,CAACI,QAAQ;YACjD,IAAIC,cAAc,GAACF,OAAO,GAACL,IAAI,CAACQ,KAAK;YAErC,OAAO;cACH,GAAGR,IAAI;cAACM,QAAQ,EAACD,OAAO;cACxBI,UAAU,EAACF;YACf,CAAC;UAEL,CAAC,MACG;YACA,OAAOP,IAAI;UACf;QACJ,CAAC,CAAC;QACFJ,KAAK,CAACR,KAAK,GAACe,QAAQ;MAExB,CAAC,MACG;QACAP,KAAK,CAACR,KAAK,CAACsB,IAAI,CAACb,MAAM,CAACK,OAAO,CAAC;MACpC;IAER;EACJ;AACJ,CAAC,CAAC;AACF,OAAO,MAAM;EAACP;AAAS,CAAC,GAACH,SAAS,CAACmB,OAAO;AAC1C,eAAenB,SAAS,CAACoB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}