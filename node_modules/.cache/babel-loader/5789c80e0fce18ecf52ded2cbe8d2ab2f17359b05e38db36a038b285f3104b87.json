{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { BASE_URL } from \"../utils/apiURL\";\nimport { STATUS } from \"../utils/status\";\nconst initialState = {\n  categories: [],\n  categoriesStatus: STATUS.IDLE,\n  categoryProducts: [],\n  categoryProductsStatus: STATUS.IDLE\n};\nconst categorySlice = createSlice({\n  name: 'category',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    // builder\n    // .addCase(fetchAsyncCategories.pending,(state,action)=>{\n    //     state.categoriesStatus=STATUS.LOADING;\n    // })\n    // .addCase(fetchAsyncCategories.fulfilled,(state,action)=>{\n    //     state.categories=action.payload;\n    //     state.categoriesStatus=STATUS.SUCCEEDED;\n    // })\n    // .addCase(fetchAsyncCategories.rejected(state,action)=>{\n    //     state.categoriesStatus=STATUS.FAILED;\n    // });\n  }\n});\nexport const fetchAsyncCategories = createAsyncThunk('categories/fetch', async () => {\n  const response = await fetch(`${BASE_URL}products/categories`);\n  const data = await response.json();\n  return data;\n});\nexport const getAllCategories = state => state.category.categories;\nexport default categorySlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","BASE_URL","STATUS","initialState","categories","categoriesStatus","IDLE","categoryProducts","categoryProductsStatus","categorySlice","name","reducers","extraReducers","builder","fetchAsyncCategories","response","fetch","data","json","getAllCategories","state","category","reducer"],"sources":["/Users/khushiverma/Desktop/Ecommerce-Website/shoppingcart/src/store/CategorySlice.js"],"sourcesContent":["import {createAsyncThunk,createSlice} from \"@reduxjs/toolkit\";\nimport {BASE_URL} from \"../utils/apiURL\";\nimport {STATUS} from \"../utils/status\";\n\nconst initialState={\n    categories:[],\n    categoriesStatus:STATUS.IDLE,\n    categoryProducts:[],\n    categoryProductsStatus:STATUS.IDLE\n}\nconst categorySlice=createSlice({\n    name:'category',\n    initialState,\n    reducers:{},\n    extraReducers:(builder)=>{\n        // builder\n        // .addCase(fetchAsyncCategories.pending,(state,action)=>{\n        //     state.categoriesStatus=STATUS.LOADING;\n        // })\n        // .addCase(fetchAsyncCategories.fulfilled,(state,action)=>{\n        //     state.categories=action.payload;\n        //     state.categoriesStatus=STATUS.SUCCEEDED;\n        // })\n        // .addCase(fetchAsyncCategories.rejected(state,action)=>{\n        //     state.categoriesStatus=STATUS.FAILED;\n        // });\n\n    }\n});\nexport const fetchAsyncCategories=createAsyncThunk('categories/fetch',async()=>{\n    const response=await fetch(`${BASE_URL}products/categories`);\n    const data=await response.json();\n    return data;\n})\nexport const getAllCategories=(state)=>state.category.categories;\nexport default categorySlice.reducer;"],"mappings":"AAAA,SAAQA,gBAAgB,EAACC,WAAW,QAAO,kBAAkB;AAC7D,SAAQC,QAAQ,QAAO,iBAAiB;AACxC,SAAQC,MAAM,QAAO,iBAAiB;AAEtC,MAAMC,YAAY,GAAC;EACfC,UAAU,EAAC,EAAE;EACbC,gBAAgB,EAACH,MAAM,CAACI,IAAI;EAC5BC,gBAAgB,EAAC,EAAE;EACnBC,sBAAsB,EAACN,MAAM,CAACI;AAClC,CAAC;AACD,MAAMG,aAAa,GAACT,WAAW,CAAC;EAC5BU,IAAI,EAAC,UAAU;EACfP,YAAY;EACZQ,QAAQ,EAAC,CAAC,CAAC;EACXC,aAAa,EAAEC,OAAO,IAAG;IACrB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA;AAGR,CAAC,CAAC;AACF,OAAO,MAAMC,oBAAoB,GAACf,gBAAgB,CAAC,kBAAkB,EAAC,YAAS;EAC3E,MAAMgB,QAAQ,GAAC,MAAMC,KAAK,CAAE,GAAEf,QAAS,qBAAoB,CAAC;EAC5D,MAAMgB,IAAI,GAAC,MAAMF,QAAQ,CAACG,IAAI,EAAE;EAChC,OAAOD,IAAI;AACf,CAAC,CAAC;AACF,OAAO,MAAME,gBAAgB,GAAEC,KAAK,IAAGA,KAAK,CAACC,QAAQ,CAACjB,UAAU;AAChE,eAAeK,aAAa,CAACa,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}