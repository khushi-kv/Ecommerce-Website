{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst fetchFromLocalStorage = () => {\n  let cart = localStorage.getItem('cart');\n  if (cart) {\n    console.log(\"fetch\");\n    return JSON.parse(localStorage.getItem('cart'));\n  } else {\n    return [];\n  }\n};\nconst storeInLocalStorage = data => {\n  localStorage.setItem('cart', JSON.stringify(data));\n  console.log(data);\n};\nconst initialState = {\n  carts: fetchFromLocalStorage(),\n  itemsCount: 0,\n  totalAmount: 0,\n  isCartMessageOn: false\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    addToCart: (state, action) => {\n      const isItemInCart = state.carts.find(item => item.id === action.payload.id);\n      if (isItemInCart) {\n        const tempCart = state.carts.map(item => {\n          if (item.id === action.payload.id) {\n            let tempQty = item.quantity + action.payload.quantity;\n            let tempTotalPrice = tempQty * item.price;\n            return {\n              ...item,\n              quantity: tempQty,\n              totalPrice: tempTotalPrice\n            };\n          } else {\n            return item;\n          }\n        });\n        state.carts = tempCart;\n        storeInLocalStorage(state.carts);\n      } else {\n        state.carts.push(action.payload);\n        storeInLocalStorage(state.carts);\n      }\n    },\n    setCartMessageOn: state => {\n      state.isCartMessageOn = true;\n    },\n    setCartMessageOff: state => {\n      state.isCartMessageOn = false;\n    }\n  }\n});\nexport const {\n  addToCart,\n  setCartMessageOn,\n  setCartMessageOff\n} = cartSlice.actions;\nexport const getCartMessageStatus = state => state.cart.isCartMessageOn;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","fetchFromLocalStorage","cart","localStorage","getItem","console","log","JSON","parse","storeInLocalStorage","data","setItem","stringify","initialState","carts","itemsCount","totalAmount","isCartMessageOn","cartSlice","name","reducers","addToCart","state","action","isItemInCart","find","item","id","payload","tempCart","map","tempQty","quantity","tempTotalPrice","price","totalPrice","push","setCartMessageOn","setCartMessageOff","actions","getCartMessageStatus","reducer"],"sources":["/Users/khushiverma/Desktop/Ecommerce-Website/shoppingcart/src/store/CartSlice.js"],"sourcesContent":["\nimport {createSlice} from \"@reduxjs/toolkit\";\n\nconst fetchFromLocalStorage = () => {\n    let cart = localStorage.getItem('cart');\n    if(cart){\n        console.log(\"fetch\");\n        return JSON.parse(localStorage.getItem('cart'));\n    } else {\n        return [];\n    }\n}\n\nconst storeInLocalStorage = (data) => {\n    \n    localStorage.setItem('cart', JSON.stringify(data));\n    console.log(data);\n}\nconst initialState = {\n    carts: fetchFromLocalStorage(),\n    itemsCount: 0,\n    totalAmount: 0,\n    isCartMessageOn: false\n}\nconst cartSlice = createSlice({\n    name: 'cart',\n    initialState,\n    reducers: {\n        addToCart: (state, action) => {\n            const isItemInCart = state.carts.find(item => item.id === action.payload.id);\n\n         if(isItemInCart){\n                const tempCart = state.carts.map(item => {\n                    if(item.id === action.payload.id){\n                        let tempQty = item.quantity + action.payload.quantity;\n                        let tempTotalPrice = tempQty * item.price;\n\n                        return {\n                            ...item, quantity: tempQty, totalPrice: tempTotalPrice\n                        }\n                    } else {\n                        return item;\n                    }\n                });\n                state.carts = tempCart;\n                storeInLocalStorage(state.carts);\n            } else {\n                state.carts.push(action.payload);\n                storeInLocalStorage(state.carts);\n            }\n           \n        },\n        setCartMessageOn:(state)=>{\n            state.isCartMessageOn=true\n        },\n        setCartMessageOff:(state)=>{\n            state.isCartMessageOn=false\n        }\n        }\n    });\n    \n    export const {addToCart,setCartMessageOn,setCartMessageOff} = cartSlice.actions;\n    export const getCartMessageStatus=(state)=>state.cart.isCartMessageOn\n    \n    export default cartSlice.reducer;"],"mappings":"AACA,SAAQA,WAAW,QAAO,kBAAkB;AAE5C,MAAMC,qBAAqB,GAAG,MAAM;EAChC,IAAIC,IAAI,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;EACvC,IAAGF,IAAI,EAAC;IACJG,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;IACpB,OAAOC,IAAI,CAACC,KAAK,CAACL,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;EACnD,CAAC,MAAM;IACH,OAAO,EAAE;EACb;AACJ,CAAC;AAED,MAAMK,mBAAmB,GAAIC,IAAI,IAAK;EAElCP,YAAY,CAACQ,OAAO,CAAC,MAAM,EAAEJ,IAAI,CAACK,SAAS,CAACF,IAAI,CAAC,CAAC;EAClDL,OAAO,CAACC,GAAG,CAACI,IAAI,CAAC;AACrB,CAAC;AACD,MAAMG,YAAY,GAAG;EACjBC,KAAK,EAAEb,qBAAqB,EAAE;EAC9Bc,UAAU,EAAE,CAAC;EACbC,WAAW,EAAE,CAAC;EACdC,eAAe,EAAE;AACrB,CAAC;AACD,MAAMC,SAAS,GAAGlB,WAAW,CAAC;EAC1BmB,IAAI,EAAE,MAAM;EACZN,YAAY;EACZO,QAAQ,EAAE;IACNC,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1B,MAAMC,YAAY,GAAGF,KAAK,CAACR,KAAK,CAACW,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAACD,EAAE,CAAC;MAE/E,IAAGH,YAAY,EAAC;QACT,MAAMK,QAAQ,GAAGP,KAAK,CAACR,KAAK,CAACgB,GAAG,CAACJ,IAAI,IAAI;UACrC,IAAGA,IAAI,CAACC,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAACD,EAAE,EAAC;YAC7B,IAAII,OAAO,GAAGL,IAAI,CAACM,QAAQ,GAAGT,MAAM,CAACK,OAAO,CAACI,QAAQ;YACrD,IAAIC,cAAc,GAAGF,OAAO,GAAGL,IAAI,CAACQ,KAAK;YAEzC,OAAO;cACH,GAAGR,IAAI;cAAEM,QAAQ,EAAED,OAAO;cAAEI,UAAU,EAAEF;YAC5C,CAAC;UACL,CAAC,MAAM;YACH,OAAOP,IAAI;UACf;QACJ,CAAC,CAAC;QACFJ,KAAK,CAACR,KAAK,GAAGe,QAAQ;QACtBpB,mBAAmB,CAACa,KAAK,CAACR,KAAK,CAAC;MACpC,CAAC,MAAM;QACHQ,KAAK,CAACR,KAAK,CAACsB,IAAI,CAACb,MAAM,CAACK,OAAO,CAAC;QAChCnB,mBAAmB,CAACa,KAAK,CAACR,KAAK,CAAC;MACpC;IAEJ,CAAC;IACDuB,gBAAgB,EAAEf,KAAK,IAAG;MACtBA,KAAK,CAACL,eAAe,GAAC,IAAI;IAC9B,CAAC;IACDqB,iBAAiB,EAAEhB,KAAK,IAAG;MACvBA,KAAK,CAACL,eAAe,GAAC,KAAK;IAC/B;EACA;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAACI,SAAS;EAACgB,gBAAgB;EAACC;AAAiB,CAAC,GAAGpB,SAAS,CAACqB,OAAO;AAC/E,OAAO,MAAMC,oBAAoB,GAAElB,KAAK,IAAGA,KAAK,CAACpB,IAAI,CAACe,eAAe;AAErE,eAAeC,SAAS,CAACuB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}