{"ast":null,"code":"// import React from 'react'\n// import { createSlice } from '@reduxjs/toolkit'\n// //for local storage of data\n// const fetchFromLocalStorage = () => {\n//     let cart = localStorage.getItem('cart');\n//     if(cart){\n//         console.log(\"fetch\");\n//         return JSON.parse(localStorage.getItem('cart'));\n\n//     } else {\n//         return [];\n//     }\n// }\n// const storeInLocalStorage = (data) => {\n//     localStorage.setItem('cart', JSON.stringify(data));\n//     console.log(data);\n// }\n// const initialState={\n// carts:fetchFromLocalStorage(),\n// itemsCount:0,\n// totalAmount:0,\n// isCartMessageOn:false\n// }\n// const cartSlice=createSlice({\n//     name:'cart',\n//     initialState,\n//     reducers:{\n//         addToCart:(state,action)=>{\n//             const isItemInCart=state.carts.find(item=>\n//                 item.id===action.payload.id);\n\n//                 if(isItemInCart){\n//                     const tempCart=state.carts.map((item)=>{\n//                         if(item.id===action.payload.id){\n//                             let tempQty=item.quantity+action.payload.quantity;\n//                             let tempTotalPrice=tempQty*item.price;\n\n//                             return {\n//                                 ...item,quantity:tempQty,\n//                                 totalPrice:tempTotalPrice\n//                             }\n\n//                         }\n//                         else{\n//                             return item;\n//                         }\n//                     })\n//                     state.carts=tempCart;\n//                     storeInLocalStorage(state.carts);\n//                 }\n//                 else{\n//                     state.carts.push(action.payload);\n//                     storeInLocalStorage(state.carts);\n//                 }\n\n//         }\n//     }\n// })\n// export const {addToCart}=cartSlice.actions;\n// export default cartSlice.reducer;","map":{"version":3,"names":[],"sources":["/Users/khushiverma/Desktop/Ecommerce-Website/shoppingcart/src/store/CartSlice.js"],"sourcesContent":["// import React from 'react'\n// import { createSlice } from '@reduxjs/toolkit'\n// //for local storage of data\n// const fetchFromLocalStorage = () => {\n//     let cart = localStorage.getItem('cart');\n//     if(cart){\n//         console.log(\"fetch\");\n//         return JSON.parse(localStorage.getItem('cart'));\n       \n//     } else {\n//         return [];\n//     }\n// }\n// const storeInLocalStorage = (data) => {\n//     localStorage.setItem('cart', JSON.stringify(data));\n//     console.log(data);\n// }\n// const initialState={\n// carts:fetchFromLocalStorage(),\n// itemsCount:0,\n// totalAmount:0,\n// isCartMessageOn:false\n// }\n// const cartSlice=createSlice({\n//     name:'cart',\n//     initialState,\n//     reducers:{\n//         addToCart:(state,action)=>{\n//             const isItemInCart=state.carts.find(item=>\n//                 item.id===action.payload.id);\n            \n//                 if(isItemInCart){\n//                     const tempCart=state.carts.map((item)=>{\n//                         if(item.id===action.payload.id){\n//                             let tempQty=item.quantity+action.payload.quantity;\n//                             let tempTotalPrice=tempQty*item.price;\n\n//                             return {\n//                                 ...item,quantity:tempQty,\n//                                 totalPrice:tempTotalPrice\n//                             }\n\n//                         }\n//                         else{\n//                             return item;\n//                         }\n//                     })\n//                     state.carts=tempCart;\n//                     storeInLocalStorage(state.carts);\n//                 }\n//                 else{\n//                     state.carts.push(action.payload);\n//                     storeInLocalStorage(state.carts);\n//                 }\n          \n//         }\n//     }\n// })\n// export const {addToCart}=cartSlice.actions;\n// export default cartSlice.reducer;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}