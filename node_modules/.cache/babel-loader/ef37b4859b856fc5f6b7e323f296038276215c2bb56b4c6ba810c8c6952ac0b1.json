{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { BASE_URL } from \"../utils/apiURL\";\nimport { STATUS } from \"../utils/status\";\nconst initialState = {\n  products: [],\n  productsStatus: STATUS.IDLE,\n  productSingle: [],\n  productSingleStatus: STATUS.IDLE\n};\nconst productSlice = createSlice({\n  name: \"product\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchAsyncProducts.pending, (state, action) => {\n      state.productsStatus = STATUS.LOADING;\n    }).addCase(fetchAsyncProducts.fulfilled, (state, action) => {\n      state.products = action.payload;\n      state.productsStatus = STATUS.SUCCEEDED;\n    }).addCase(fetchAsyncProducts.rejected, (state, action) => {\n      state.productsStatus = STATUS.FAILED;\n    }).addCase(fetchAsyncSingleProduct.pending, (state, action) => {\n      state.productSingleStatus = STATUS.LOADING;\n    }).addCase(fetchAsyncSingleProduct.fulfilled, (state, action) => {\n      state.productSingle = action.payload;\n      state.productSingleStatus = STATUS.SUCCEEDED;\n    }).addCase(fetchAsyncSingleProduct.rejected, (state, action) => {\n      state.productSingleStatus = STATUS.FAILED;\n    });\n  }\n});\n// for getting the products list with limited numbers\nexport const fetchAsyncProducts = createAsyncThunk(\"products/fetch\", async limit => {\n  const response = await fetch(`${BASE_URL}products?limit=${limit}`);\n  const data = await response.json();\n  return data.products;\n});\n//for single product\nexport const fetchAsyncSingleProduct = createAsyncThunk(\"products-single/fetch\", async id => {\n  const response = await fetch(`${BASE_URL}products/${id}`);\n  const data = response.json();\n  return data;\n});\nexport const getAllProducts = state => state.product.products;\nexport const getAllProductsStatus = state => state.product.productsStatus;\nexport const getProductSingle = state => state.product.productSingle;\nexport const getProductSingleStatus = state => state.product.productSingleStatus;\nexport default productSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","BASE_URL","STATUS","initialState","products","productsStatus","IDLE","productSingle","productSingleStatus","productSlice","name","reducers","extraReducers","builder","addCase","fetchAsyncProducts","pending","state","action","LOADING","fulfilled","payload","SUCCEEDED","rejected","FAILED","fetchAsyncSingleProduct","limit","response","fetch","data","json","id","getAllProducts","product","getAllProductsStatus","getProductSingle","getProductSingleStatus","reducer"],"sources":["/Users/khushiverma/Desktop/Ecommerce-Website/Ecommerce-Website/shoppingcart/src/store/ProductSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { BASE_URL } from \"../utils/apiURL\";\nimport { STATUS } from \"../utils/status\";\nconst initialState = {\n  products: [],\n  productsStatus: STATUS.IDLE,\n  productSingle: [],\n  productSingleStatus: STATUS.IDLE,\n};\nconst productSlice = createSlice({\n  name: \"product\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchAsyncProducts.pending, (state, action) => {\n        state.productsStatus = STATUS.LOADING;\n      })\n      .addCase(fetchAsyncProducts.fulfilled, (state, action) => {\n        state.products = action.payload;\n        state.productsStatus = STATUS.SUCCEEDED;\n      })\n      .addCase(fetchAsyncProducts.rejected, (state, action) => {\n        state.productsStatus = STATUS.FAILED;\n      })\n      .addCase(fetchAsyncSingleProduct.pending, (state, action) => {\n        state.productSingleStatus = STATUS.LOADING;\n      })\n      .addCase(fetchAsyncSingleProduct.fulfilled, (state, action) => {\n        state.productSingle = action.payload;\n        state.productSingleStatus = STATUS.SUCCEEDED;\n      })\n      .addCase(fetchAsyncSingleProduct.rejected, (state, action) => {\n        state.productSingleStatus = STATUS.FAILED;\n      });\n  },\n});\n// for getting the products list with limited numbers\nexport const fetchAsyncProducts = createAsyncThunk(\n  \"products/fetch\",\n  async (limit) => {\n    const response = await fetch(`${BASE_URL}products?limit=${limit}`);\n    const data = await response.json();\n    return data.products;\n  }\n);\n//for single product\nexport const fetchAsyncSingleProduct = createAsyncThunk(\n  \"products-single/fetch\",\n  async (id) => {\n    const response = await fetch(`${BASE_URL}products/${id}`);\n    const data = response.json();\n    return data;\n  }\n);\nexport const getAllProducts = (state) => state.product.products;\nexport const getAllProductsStatus = (state) => state.product.productsStatus;\nexport const getProductSingle = (state) => state.product.productSingle;\nexport const getProductSingleStatus = (state) =>\n  state.product.productSingleStatus;\n\nexport default productSlice.reducer;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}